name: IntegrationTestImage

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker image to test'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Setup ngrok
        run: |
           wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
           tar xvzf ./ngrok-v3-stable-linux-amd64.tgz
           ./ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}

      - name: Start ngrok tunnel
        run: (./ngrok http 8080 ) &
        shell: bash

      - name: Print tunnel URL
        run: |
          sleep 5
          echo "ngrok URL: $(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')"
          
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
           
      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << EOF

          services:
            padeltick:
              image: ${{ github.event.inputs.image }}
              ports:
                - "8080:8080"
              environment:
                INTEGRATION_TESTING: "true"
                JWT_SECRET: ${JWT_SECRET}
                SIWA_APPLICATION_IDENTIFIER: ${SIWA_APPLICATION_IDENTIFIER}
                LOG_LEVEL: "info"
              restart: unless-stopped
          EOF
           
      - name: Login to GHCR
        run: echo "${{ secrets.PAT }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Pull image from GHCR
        run: docker compose up
        env:
          IMAGE: ${{ github.event.inputs.image }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SIWA_APPLICATION_IDENTIFIER: ${{ secrets.SIWA_APPLICATION_IDENTIFIER }}
